{
    "componentChunkName": "component---src-templates-blog-list-tsx",
    "path": "/blog/2",
    "result": {"data":{"allMdx":{"edges":[{"node":{"id":"ece07c3b-138f-5942-a2a1-b131a992b24c","frontmatter":{"title":"Using Marquez to Visualize dbt Models","author":"Ross Turk","description":"Each time dbt runs, it generates a trove of metadata about datasets and the work it performs with them. In this post, Iâ€™d like to show you how to harvest this metadata and put it to good use.","date":"21 September 2021","image":{"publicURL":"/static/c25bcf7fc9107747cdae027757c65286/image.svg","childImageSharp":null}},"fields":{"slug":"/blog/dbt-with-marquez/"}}},{"node":{"id":"c11bffe5-b123-593b-9403-d9ceff1b2e20","frontmatter":{"title":"Introducing OpenLineage 0.1.0","author":"Julien Le Dem","description":"We are pleased to announce the initial release of OpenLineage. This release includes the core specification, data model, clients, and integrations with common data tools.","date":"03 September 2021","image":{"publicURL":"/static/8d3e8ba19568854f4889ad380b2ed531/image.svg","childImageSharp":null}},"fields":{"slug":"/blog/0.1-release/"}}},{"node":{"id":"03b8f876-b14a-5e0a-a54c-6a451ae69d5a","frontmatter":{"title":"Expecting Great Quality with OpenLineage Facets","author":"Michael Collado","description":"Good data is paramount to making good decisions- but how can you trust the quality of your data and its dependencies?","date":"12 August 2021","image":{"publicURL":"/static/5619f3fcfa021646e37fdf891782cdcd/image.svg","childImageSharp":null}},"fields":{"slug":"/blog/dataquality_expectations_facet/"}}},{"node":{"id":"65c0862b-a4a4-5246-8c5d-2e3e9aafba2d","frontmatter":{"title":"Extending OpenLineage with Facets","author":"Julien Le Dem","description":"Facets are a self-contained definition of one aspect of a job, dataset, or run at the time the event happened. They make the OpenLineage model extensible.","date":"27 July 2021","image":{"publicURL":"/static/a751eb924fa24f628a8fbcba8b6ae3f4/image.svg","childImageSharp":null}},"fields":{"slug":"/blog/extending-with-facets/"}}},{"node":{"id":"073ee6ae-6f9b-58bd-b8ba-b77a47d530dd","frontmatter":{"title":"OpenLineage joins the LF AI & Data Foundation","author":"Julien Le Dem","description":"Becoming a LF AI & Data project ensures that OpenLineage can never belong to a company, or even a group of developers; it belongs to us all.","date":"22 July 2021","image":{"publicURL":"/static/5c669c7f8dc99f8c82deb7df2456735b/image.svg","childImageSharp":null}},"fields":{"slug":"/blog/joining-lfai/"}}},{"node":{"id":"ffbf04ae-3a2c-5a96-8f31-c03eb59ad6b8","frontmatter":{"title":"Exploring Lineage History via the Marquez API","author":"Michael Collado","description":"Taking advantage of recent changes to the Marquez API, this post shows how to diagnose job failures and explore the impact of code changes on downstream dependents.","date":"08 July 2021","image":{"publicURL":"/static/7fa9cf5cb4a7ee6c2ed8a7ecf38db0c5/image.svg","childImageSharp":null}},"fields":{"slug":"/blog/explore-lineage-api/"}}},{"node":{"id":"d79b344c-02ac-5d2d-8479-a2dbd229c46a","frontmatter":{"title":"Backfilling Airflow DAGs using Marquez","author":"Willy Lulciuc","description":"In this blog post, we'll discuss how lineage metadata can be used to automatically backfill DAGs with complex upstream and downstream dependencies.","date":"30 June 2021","image":{"publicURL":"/static/807ce55173f1e9826dd4f023e9884fc0/image.svg","childImageSharp":null}},"fields":{"slug":"/blog/backfilling-airflow-dags-using-marquez/"}}},{"node":{"id":"6b7a2e72-2925-5a55-aebf-b881b3c68978","frontmatter":{"title":"How OpenLineage takes inspiration from OpenTelemetry","author":"Julien Le Dem","description":"The data world and the service world have many similarities but also a few crucial differences.","date":"20 June 2021","image":{"publicURL":"/static/2c2ed255132045784fe157e961f32ba5/image.svg","childImageSharp":null}},"fields":{"slug":"/blog/openlineage-takes-inspiration-from-opentelemetry/"}}}]}},"pageContext":{"limit":10,"skip":10,"numPages":2,"currentPage":2}},
    "staticQueryHashes": ["1139857438","1946588481","2083862410","2213455283","2418326273","3067102388"]}