(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{M97e:function(e,t,a){"use strict";var n=a("q1tI"),r=a.n(n),l=a("Wbzz"),o=a("lHIJ");t.a=function(e){var t=e.data,a=(e.even,t.frontmatter.datasources.split(","));return a.map((function(e,n){return r.a.createElement("tr",{className:"integration-item"},0===n&&r.a.createElement("td",{className:"int-desc",rowSpan:a.length},r.a.createElement("h3",{className:"mt-0"},r.a.createElement(l.a,{to:t.fields.slug,title:"Read More"},t.frontmatter.title)),r.a.createElement("p",null,t.frontmatter.description)),0===n&&r.a.createElement("td",{rowSpan:a.length},r.a.createElement("p",null,t.frontmatter.version)),r.a.createElement("td",{className:"int-datasources"},r.a.createElement("p",null,e)),0===n&&r.a.createElement("td",{rowSpan:a.length},r.a.createElement("ul",null,r.a.createElement("li",{className:"mb-2 text-color-2"},r.a.createElement(l.a,{to:t.fields.slug,title:"Read More"},"Docs ",r.a.createElement(o.a,{className:"inline-block"}))),t.frontmatter.github&&r.a.createElement("li",{className:"mb-2 text-color-2"},r.a.createElement(l.a,{to:t.frontmatter.github,title:"Read More"},"GitHub ",r.a.createElement(o.a,{className:"inline-block"}))),t.frontmatter.blog&&r.a.createElement("li",{className:"mb-2 text-color-2"},r.a.createElement(l.a,{to:t.frontmatter.blog,title:"Read More"},"Blog ",r.a.createElement(o.a,{className:"inline-block"}))))))}))}},lHIJ:function(e,t,a){"use strict";var n=a("q1tI"),r=a.n(n);function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=Object(n.forwardRef)((function(e,t){var a=e.color,n=void 0===a?"currentColor":a,c=e.size,s=void 0===c?24:c,i=o(e,["color","size"]);return r.a.createElement("svg",l({ref:t,xmlns:"http://www.w3.org/2000/svg",width:s,height:s,viewBox:"0 0 24 24",fill:"none",stroke:n,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},i),r.a.createElement("line",{x1:"5",y1:"12",x2:"19",y2:"12"}),r.a.createElement("polyline",{points:"12 5 19 12 12 19"}))}));c.displayName="ArrowRight",t.a=c},wYdT:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return c}));var n=a("q1tI"),r=a.n(n),l=a("9Dj+"),o=a("M97e");function c(e){var t=e.data,a=(e.pageContext,e.location);Object(n.useEffect)((function(){window.dispatchEvent(new CustomEvent("scroll"))}),[]);var c=t.allMdx.edges.map((function(e,t){return r.a.createElement(o.a,{data:e.node,key:e.node.id,even:(t+1)%2==0})}));return r.a.createElement(l.a,{seo:{title:"Integrations"},location:a},r.a.createElement("div",{className:"py-12 px-4 lg:px-0"},r.a.createElement("div",{className:"title py-8 text-center"},r.a.createElement("h2",{className:"text-5xl text-color-1"},"Integrations")),r.a.createElement("div",{className:"boxed py-8"},r.a.createElement("p",null,"OpenLineage connectors have been created for major job schedulers and data platforms. By using these connectors, the appropriate API calls will be made automatically each time your pipeline executes. They capture information about datasets, jobs, and runs, allowsing you to study lineage across multiple data sources."),r.a.createElement("table",{className:"integration-list"},r.a.createElement("tr",null,r.a.createElement("th",null,"Platform"),r.a.createElement("th",null,"Version"),r.a.createElement("th",null,"Data Sources"),r.a.createElement("th",null,"Resources")),c))))}}}]);
//# sourceMappingURL=component---src-templates-integration-list-tsx-074a76430b219f15e948.js.map